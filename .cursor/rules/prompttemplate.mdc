# `prompts.ts` (Opinion Essay) - Flow Template

## Index 0: Readiness Check

*   **Purpose:** Ask if the user is ready to begin the Opinion Essay practice.
*   **Flags/Properties:**
    *   `validation: customValidationInstructionForQuestion` (Requires a 'yes'/'ok' type answer)
*   **Output Snippet:** "Are you ready to begin practicing IELTS opinion introductions?"

---

## Index 1: Select Question

*   **Purpose:** Randomly select and output *one* Opinion Essay question.
*   **Flags/Properties:**
    *   `autoTransitionVisible: true` (Triggers immediate transition processing; this output will be the *start* of the combined response for the turn)
*   **Output Snippet:** "Companies that rely on fossil fuels... To what extent do you agree or disagree?" (Example)

---

## Index 2: Confirm Question Choice

*   **Purpose:** Ask the user if they want to proceed with the selected question or get a new one. *Requires user input.*
*   **Flags/Properties:**
    *   `validation: customValidationInstructionForQuestion` (Requires 'continue'/'yes' or 'another'/'no' type answer)
    *   `fallbackIndex: 1` (If validation fails (e.g., user says "no"), go back to Index 1 to select another question)
*   **Output Snippet:** "Do you want to continue with this question, or would you like another one?"

---

## Index 3: Display Confirmed Question

*   **Purpose:** Display the question the user *confirmed* they want to use.
*   **Flags/Properties:**
    *   `autoTransitionVisible: true` (Triggers transition processing)
    *   `temperature: 0` (Ensures exact reproduction of the question text)
*   **Output Snippet:** "This is your chosen question: **<Chosen Question>**."

---

## Index 4: Ask for Introduction

*   **Purpose:** Prompt the user to write their introduction for the chosen question. *Requires user input.*
*   **Flags/Properties:**
    *   *(None directly affecting auto-transitions, memory saving, etc.)*
*   **Output Snippet:** "Please write an IELTS introduction for this essay title."

---

## Index 5: Display User Introduction

*   **Purpose:** Display the introduction the user just submitted.
*   **Flags/Properties:**
    *   `autoTransitionVisible: true` (Triggers transition processing)
    *   `important_memory: true` (Marks the output with `# ` for potential buffer priority)
    *   `temperature: 0` (Ensures exact reproduction of user's text)
    *   `saveAssistantOutputAs: "[user_introduction]"` (Saves this displayed intro to named memory)
*   **Output Snippet:** "**User's Introduction**: <User Introduction>."

---

## Index 6: Display Chosen Question Again

*   **Purpose:** Retrieve and display the user's chosen question (likely from memory).
*   **Flags/Properties:**
    *   `autoTransitionVisible: true` (Triggers transition processing)
    *   `temperature: 0` (Ensures exact reproduction)
    *   `saveAssistantOutputAs: "[chosen_question]"` (Saves the retrieved question to memory - potentially redundant if already saved, but ensures it's there)
    *   `important_memory: true` (Marks output with `# `)
*   **Output Snippet:** "**User's Chosen Question**: <The full chosen question text>"

---

## Index 7: Extract Original Question Statement (OQS)

*   **Purpose:** Extract only the core statement part of the chosen question (excluding "To what extent...").
*   **Flags/Properties:**
    *   `autoTransitionVisible: true`
    *   `important_memory: true`
    *   `temperature: 0`
    *   `saveAssistantOutputAs: "[oqs]"` (Saves the extracted statement)
*   **Output Snippet:** "**Question Statement**: '<Extracted Statement>'"

---

## Index 8: Extract User's Paraphrased Statement (BGS)

*   **Purpose:** Extract the user's attempt at paraphrasing the question statement (typically the first part of their intro).
*   **Flags/Properties:**
    *   `autoTransitionVisible: true`
    *   `important_memory: true`
    *   `temperature: 0`
    *   `saveAssistantOutputAs: "[bgs]"` (Saves the user's paraphrased part)
*   **Output Snippet:** "**User's background Statement**: <User background Statement>"

---

## Index 9: Extract User's Ideas

*   **Purpose:** Extract the two supporting ideas from the user's introduction.
*   **Flags/Properties:**
    *   `autoTransitionVisible: true`
    *   `important_memory: true`
    *   `temperature: 0`
    *   `saveAssistantOutputAs: "[user_extracted_ideas]"`
*   **Output Snippet:** "**Extracted Ideas:**\n1. [Idea 1]\n2. [Idea 2]"

---

## Index 10: Readiness Check (Before Formula)

*   **Purpose:** Ask "Are you ready to continue?". *Requires user input.*
*   **Flags/Properties:**
    *   `buffer_memory: 1` (Sets buffer for next steps)
*   **Output Snippet:** "Are you ready to continue?"

---
